rawdata$score2014[rawdata$Name=="Gracemount Comm Park     "]<-54
rawdata$score2014[rawdata$Name=="GorgieDalry Comm Park      "]<-45
rawdata$...1<-NULL
write.csv(rawdata, "data/EdinParkQuality_rawdata2014.csv")
procdata<-read.csv("data/EdinParkQuality_rawdata2014.csv")
View(procdata)
procdata<-read.csv("data/EdinParkQuality_rawdata2014 - EdinParkQuality_rawdata_master.csv")
View(procdata)
procdata$Scorechange<-procdata$Score2021-procdata$Score2014
View(procdata)
register_google(key = "AIzaSyDTjQcTOp_zYu_EbqPGnc5_Rkt8U97ODO8", write = TRUE)
library(ggmap)
register_google(key = "AIzaSyDTjQcTOp_zYu_EbqPGnc5_Rkt8U97ODO8", write = TRUE)
procdata$Name<-paste0(procdata$Name, " , Edinburgh, Scotland")
View(procdata)
addr.geo <- mutate_geocode(procdata, location = Name, output = "latlona")
View(addr.geo)
library(mapview)
mapview(addr.geo, xcol = "lon", ycol = "lat", crs = 4269, grid = FALSE)
addr.geo$lat[addr.geo$Name=="Whinhill Park , Edinburgh, Scotland"]<-55.927589
addr.geo$lon[addr.geo$Name=="Whinhill Park , Edinburgh, Scotland"]<--3.271985
View(addr.geo)
View(addr.geo)
addr.geo$lat[addr.geo$Name=="Whinhill Park       , Edinburgh, Scotland"]<-55.927589
addr.geo$lon[addr.geo$Name=="Whinhill Park       , Edinburgh, Scotland"]<--3.271985
View(addr.geo)
mapview(addr.geo, xcol = "lon", ycol = "lat", crs = 4269, grid = FALSE)
write.csv(addr.geo, "data/EdinParkQuality_rawdata2014_2.csv")
View(addr.geo)
addr.geo$lat[addr.geo$Name=="Marchbank Park       , Edinburgh, Scotland"]<-55.877015
addr.geo$lon[addr.geo$Name=="Marchbank Park       , Edinburgh, Scotland"]<--3.343840
write.csv(addr.geo, "data/EdinParkQuality_rawdata2014_2.csv")
addr.geo
parkpoints<-st_read("geo/parkpoints.shp")
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
View(parkpoints)
simd<-st_read("geo/sc_dz_11.shp")
parkpoints[simd,]
pnts <- parkpoints %>% mutate(
intersection = as.integer(st_intersects(geometry, simd))
, area = if_else(is.na(intersection), '', map$SUA_NAME16[intersection])
)
library(dplyr)
pnts <- parkpoints %>% mutate(
intersection = as.integer(st_intersects(geometry, simd))
, area = if_else(is.na(intersection), '', map$SUA_NAME16[intersection])
)
library(dplyr)
pnts <- parkpoints %>% mutate(
intersection = as.integer(st_intersects(geometry, simd))
, area = if_else(is.na(intersection), '', simd$Score2021[intersection])
)
View(pnts)
library(dplyr)
pnts <- parkpoints %>% mutate(
intersection = as.integer(st_intersects(geometry, simd))
)
View(pnts)
pnts <- parkpoints %>% mutate(
intersection = as.integer(st_intersects(geometry, simd))
, area = simd$Score2021[intersection]
)
View(pnts)
int <- sf::st_intersects(parkpoints, simd)
int
simd<-st_read("geo/sc_dz_11.shp")
head(simd)
simd<-st_read("geo/sc_dz_11.shp")
names(simd)
simddata<-read.csv("data/simd2020_withinds.csv")
View(simddata)
names(simd)
names(simddata)
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$Score2021 <- as.character(simd$SIMD2020v2_Decile[unlist(int)])
View(parkpoints)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.character(simd$SIMD2020v2_Decile[unlist(int)])
View(parkpoints)
parkpoints$SIMD2020 <- as.numeric(simd$SIMD2020v2_Decile[unlist(int)])
View(addr.geo)
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.numeric(simd$SIMD2020v2_Decile[unlist(int)])
View(parkpoints)
names(simddata$SIMD2020v2_Quintile)
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.numeric(simd$SIMD2020v2_Quintile[unlist(int)])
View(parkpoints)
names(parkpoints)
ggplot(parkpoints, aes(x=SIMD2020, y=Scorechang)) +
geom_boxplot(notch=TRUE)
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang))) +
geom_boxplot(notch=TRUE)
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang)) group=SIMD2020) +
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang)), group=SIMD2020) +
geom_boxplot(notch=TRUE)
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.factor(simd$SIMD2020v2_Quintile[unlist(int)])
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang))) +
geom_boxplot(notch=TRUE)
View(parkpoints)
as.numeric(parkpoints$Scorechang)
parkpoints$Scorechang
as.numeric(as.character(parkpoints$Scorechang))
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.factor(simd$SIMD2020v2_Quintile[unlist(int)])
parkpoints$Scorechang<-as.numeric(as.character(parkpoints$Scorechang))
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang))) +
geom_boxplot(notch=TRUE)
View(parkpoints)
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.factor(simd$SIMD2020v2_Quintile[unlist(int)])
parkpoints$Scorechang<-as.numeric(as.character(parkpoints$Scorechang))
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang))) +
geom_boxplot(notch=TRUE)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang))) +
geom_boxplot(notch=F)
names(parkpoints)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2014))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(score2014))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2014))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.factor(simd$SIMD2020v2_Quintile[unlist(int)])
parkpoints$Scorechang<-as.numeric(as.character(parkpoints$Scorechang))
parkpoints$Score2014<-as.numeric(as.character(parkpoints$Score2014))
parkpoints$Score2021<-as.numeric(as.character(parkpoints$Score2021))
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2014))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2014))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2014))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2014))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.factor(simd$SIMD2020v2_Quintile[unlist(int)])
parkpoints$Scorechang<-as.numeric(as.character(parkpoints$Scorechang))
parkpoints$Score2014<-as.numeric(as.character(parkpoints$Score2014))
parkpoints$Score2021<-as.numeric(as.character(parkpoints$Score2021))
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2014))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang))) +
geom_boxplot(notch=F)
parkpoints$SC2
parkpoints$Scorechang
parkpoints$Scorechang[is.na(parkpoints$Scorechang)]<-""
st_write(parkpoints, "geo/parkpoints2.shp")
?mapview
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="SIMD2020", crs = 4269, grid = FALSE)
rawdata<-read_xlsx("data/EdinParkQuality_rawdata.xlsx", sheet="2015", col_names = F)
View(rawdata)
parkpoints$SIMD2020[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-5
parkpoints$lat[addr.geo$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-55.940278
parkpoints$lon[addr.geo$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<--3.193139
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.factor(simd$SIMD2020v2_Quintile[unlist(int)])
parkpoints$Scorechang<-as.numeric(as.character(parkpoints$Scorechang))
parkpoints$Score2014<-as.numeric(as.character(parkpoints$Score2014))
parkpoints$Score2021<-as.numeric(as.character(parkpoints$Score2021))
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2014))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="SIMD2020", crs = 4269, grid = FALSE)
parkpoints$SIMD2020[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-5
parkpoints<-parkpoints%>%
st_as_sf(.,coords=c("lat","lon"),crs=4326)
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="SIMD2020", crs = 4269, grid = FALSE)
parkpoints$geometry<-NULL
parkpoints<-parkpoints%>%
st_as_sf(.,coords=c("lat","lon"),crs=4326)
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="SIMD2020", crs = 4269, grid = FALSE)
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
# correction
parkpoints$SIMD2020[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-5
parkpoints$lat[addr.geo$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-55.940278
parkpoints$lon[addr.geo$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<--3.193139
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.factor(simd$SIMD2020v2_Quintile[unlist(int)])
parkpoints$Scorechang<-as.numeric(as.character(parkpoints$Scorechang))
parkpoints$Score2014<-as.numeric(as.character(parkpoints$Score2014))
parkpoints$Score2021<-as.numeric(as.character(parkpoints$Score2021))
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2014))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang))) +
geom_boxplot(notch=F)
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="SIMD2020", crs = 4269, grid = FALSE)
parkpoints
parkpoints%>%
st_as_sf(.,coords=c("lat","lon"),crs=4326)
parkpoints$geometry<-NULL
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="SIMD2020", crs = 4269, grid = FALSE)
parkpoints<-parkpoints%>%
st_as_sf(.,coords=c("lat","lon"),crs=4326)
parkpoints
plot(parkpoints)
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
# correction
parkpoints$SIMD2020[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-5
parkpoints$lat[addr.geo$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-55.940278
parkpoints$lon[addr.geo$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<--3.193139
parkpoints$geometry<-NULL
parkpoints<-parkpoints%>%
st_as_sf(.,coords=c("lon","lat",),crs=4326)
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
# correction
parkpoints$SIMD2020[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-5
parkpoints$lat[addr.geo$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-55.940278
parkpoints$lon[addr.geo$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<--3.193139
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.factor(simd$SIMD2020v2_Quintile[unlist(int)])
parkpoints$Scorechang<-as.numeric(as.character(parkpoints$Scorechang))
parkpoints$Score2014<-as.numeric(as.character(parkpoints$Score2014))
parkpoints$Score2021<-as.numeric(as.character(parkpoints$Score2021))
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2014))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang))) +
geom_boxplot(notch=F)
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
# correction
parkpoints$SIMD2020[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-5
parkpoints$lat[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-55.940278
parkpoints$lon[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<--3.193139
parkpoints$geometry<-NULL
parkpoints<-parkpoints%>%
st_as_sf(.,coords=c("lat","lon"),crs=4326)
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.factor(simd$SIMD2020v2_Quintile[unlist(int)])
plot(parkpoints)
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
# correction
parkpoints$SIMD2020[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-5
parkpoints$lat[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-55.940278
parkpoints$lon[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<--3.193139
#parkpoints$geometry<-NULL
names(parkpoints)
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="Scorechang", crs = 4269, grid = FALSE)
parkpoints$Scorechang<-as.numeric(parkpoints$scorechan)
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="Scorechang", crs = 4269, grid = FALSE)
as.numeric(parkpoints$Scorechang)
parkpoints$Scorechang<-as.numeric(as.character(parkpoints$Scorechang))
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="Scorechang", crs = 4269, grid = FALSE)
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
# correction
parkpoints$SIMD2020[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-5
parkpoints$lat[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-55.940278
parkpoints$lon[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<--3.193139
# change to new points!!!
#parkpoints$geometry<-NULL
#parkpoints<-parkpoints%>%
#st_as_sf(.,coords=c("lat","lon"),crs=4326)
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.factor(simd$SIMD2020v2_Quintile[unlist(int)])
parkpoints$Scorechang<-as.numeric(as.character(parkpoints$Scorechang))
parkpoints$Score2014<-as.numeric(as.character(parkpoints$Score2014))
parkpoints$Score2021<-as.numeric(as.character(parkpoints$Score2021))
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2014))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang))) +
geom_boxplot(notch=F)
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="SIMD2020", crs = 4269, grid = FALSE)
parkpoints$Scorechang<-as.numeric(as.character(parkpoints$Scorechang))
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="Scorechang", crs = 4269, grid = FALSE)
?mapview
?mapview
library(sf)
parkpoints<-st_read("geo/parkpoints.shp")
simd<-st_read("geo/sc_dz_11.shp")
simddata<-read.csv("data/simd2020_withinds.csv")
simd<-merge(simd, simddata, by.x="DataZone", by.y="Data_Zone")
# correction
parkpoints$SIMD2020[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-5
parkpoints$lat[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<-55.940278
parkpoints$lon[parkpoints$Name=="The Meadows and BLeith Links      , Edinburgh, Scotland"]<--3.193139
# change to new points!!!
#parkpoints$geometry<-NULL
#parkpoints<-parkpoints%>%
#st_as_sf(.,coords=c("lat","lon"),crs=4326)
library(dplyr)
int <- sf::st_intersects(parkpoints, simd)
parkpoints$SIMD2020 <- as.factor(simd$SIMD2020v2_Quintile[unlist(int)])
parkpoints$Scorechang<-as.numeric(as.character(parkpoints$Scorechang))
parkpoints$Score2014<-as.numeric(as.character(parkpoints$Score2014))
parkpoints$Score2021<-as.numeric(as.character(parkpoints$Score2021))
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2014))) +
geom_boxplot(notch=F)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Score2021))) +
geom_boxplot(notch=F)
library(ggplot2)
ggplot(parkpoints, aes(x=SIMD2020, y=as.numeric(Scorechang))) +
geom_boxplot(notch=F)
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="SIMD2020", crs = 4269, grid = FALSE)
parkpoints$Scorechang<-as.numeric(as.character(parkpoints$Scorechang))
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="Scorechang", crs = 4269, grid = FALSE)
parkpoints$ScorechangQ4<-gtools::quantcut(parkpoints$Scorechang, 4)
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="ScorechangQ4", crs = 4269, grid = FALSE)
parkpoints$ScorechangQ4Q1<-ifelse(parkpoints$ScorechangQ4==1,1,0)
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="ScorechangQ4Q1", crs = 4269, grid = FALSE)
parkpoints$ScorechangQ4
a<-mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="ScorechangQ4Q1", crs = 4269, grid = FALSE)
b<-mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="ScorechangQ4Q2", crs = 4269, grid = FALSE)
parkpoints$Scorechang<-as.numeric(as.character(parkpoints$Scorechang))
parkpoints$ScorechangQ4<-gtools::quantcut(parkpoints$Scorechang, 4)
parkpoints$ScorechangQ4Q1<-ifelse(parkpoints$ScorechangQ4=="[-6,5]",1,0)
parkpoints$ScorechangQ4Q2<-ifelse(parkpoints$ScorechangQ4=="(5,9]",1,0)
parkpoints$ScorechangQ4Q3<-ifelse(parkpoints$ScorechangQ4=="(9,12]",1,0)
parkpoints$ScorechangQ4Q4<-ifelse(parkpoints$ScorechangQ4=="(12,26]",1,0)
mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="ScorechangQ4", crs = 4269, grid = FALSE)
a<-mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="ScorechangQ4Q1", crs = 4269, grid = FALSE)
b<-mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="ScorechangQ4Q2", crs = 4269, grid = FALSE)
c<-mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="ScorechangQ4Q3", crs = 4269, grid = FALSE)
d<-mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="ScorechangQ4Q4", crs = 4269, grid = FALSE)
e<-c(a,b,c,d)
e
e<-mapview(c(a,b,c,d))
a
a
d
parkpoints$ScorechangQ2<-gtools::quantcut(parkpoints$Scorechang, 2)
parkpoints$ScorechangQ2
parkpoints$ScorechangQ2Q1<-ifelse(parkpoints$ScorechangQ2=="[-6,9]",1,0)
parkpoints$ScorechangQ2Q2<-ifelse(parkpoints$ScorechangQ2=="(9,26]",1,0)
b<-mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="ScorechangQ2Q2", crs = 4269, grid = FALSE)
b
a<-mapview(parkpoints, xcol = "lon", ycol = "lat", zcol="ScorechangQ2Q1", crs = 4269, grid = FALSE)
a
library(sf)
library(geobr)
library(mapview)
library(ggplot2)
library(gridExtra)
parksfromedinburghcouncil<-read_sf("geo/Open_Space_Audit_2016.shp")
library(ggplot2)
library(dplyr)
premsub<-parksfromedinburghcouncil %>%
dplyr::filter(PAN65=="Public Parks & Gardens") %>%
dplyr::filter(NP_Name=="City Centre NP")
premsub$NAME[premsub$NAME=="The Meadows amd Bruntsfield Links"]<-"Bruntsfield Links"
premsub$NAME[premsub$NAME=="The Meadows and Bruntsfield Links"]<-"The Meadows"
premsub<-premsub[!duplicated(premsub$NAME),]
# not getting distinct
nrow(premsub)
library(ggpubr)
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
premsub$scale<-(range01(premsub$Area_ha)+0.01)*2
######################
wrapper <- function(x, ...)
{
paste(strwrap(x, ...), collapse = "\n")
}
#################
premsubtop <- premsub %>% arrange(Area_ha) %>% top_n(5)
premsubbottom <- premsub %>% arrange(Area_ha) %>% top_n(-5)
premsub <- premsub %>% arrange(Area_ha)
cowplotter<-function(data, padding){
premsub<-data
premsub$centroid <-
premsub %>%
sf::st_centroid() %>%
sf::st_geometry() %>%
sf::st_transform(27700)
padding <-padding
graph <- function(x){
ggplot(data = filter(premsub[x,])) +
geom_sf(fill="lightgreen")+
#geom_sf(data =premsub[x,]$centroid)+
coord_sf(xlim = c(premsub$centroid[[x]][1]-padding ,
premsub$centroid[[x]][1]+padding),
ylim = c(premsub$centroid[[x]][2]-padding ,
premsub$centroid[[x]][2]+padding),
expand = FALSE)+
theme_void()+
theme(legend.position="none")+
ggtitle(wrapper(premsub$NAME[x], width = 18))
}
plot_list <- lapply(X = 1:nrow(premsub), FUN = graph)
g <- cowplot::plot_grid(plotlist = plot_list, ncol = 3)
g
}
cowplotter(premsub, 450)
install.packages("randomcoloR")
install.packages("randomcoloR")
